# -*- coding: utf-8 -*-
"""PRE_WEEK 16 DAY 82_Dự Án Y Tế Dự Đoán Chỉ Số Bệnh Tiểu Đường model KNN Hồi Quy.ipynb.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1X75939Kxt4wZi8H4Hv7K8WgrHyaJPvI_
"""

import streamlit as st
import numpy as np
import pandas as pd
from sklearn.neighbors import KNeighborsRegressor
from sklearn.preprocessing import StandardScaler
from sklearn.datasets import load_diabetes

st.set_page_config(page_title="Dự đoán chỉ số tiểu đường bằng KNN", layout="centered")
st.title("Dự Án Y Tế: Dự Đoán Chỉ Số Bệnh Tiểu Đường bằng KNN Hồi Quy")
st.markdown("""
##### 1. Mô tả dự án
- **Tiểu đường** là bệnh mạn tính phổ biến, cần theo dõi chỉ số sinh học để dự đoán tiến triển bệnh.
- Ứng dụng này mô phỏng dự đoán chỉ số tiến triển bệnh tiểu đường dựa trên các thông số lâm sàng bằng **K-Nearest Neighbors Regression**.

##### 2. Nhập thông tin bệnh nhân
""")

# Load dữ liệu thật từ sklearn
raw = load_diabetes()
X = pd.DataFrame(raw.data, columns=raw.feature_names)
y = raw.target

# Lưu lại mean và std của từng đặc trưng để chuẩn hóa input
means = X.mean()
stds = X.std()

# Hiển thị mô tả các đặc trưng
with st.expander("Xem mô tả các đặc trưng dữ liệu"):
    st.write(pd.DataFrame({
        'Tên': raw.feature_names,
        'Mô tả': [
            'Tuổi (age)',
            'Giới tính (sex, 1=Nam, 0=Nữ)',
            'BMI (chỉ số khối cơ thể)',
            'Huyết áp trung bình',
            'S1: TC cholesterol',
            'S2: LDL cholesterol',
            'S3: HDL cholesterol',
            'S4: Tỷ lệ cholesterol',
            'S5: Glucose trong máu',
            'S6: Hồng cầu glycat hóa'
        ]
    }))

# Các trường nhập liệu thực tế (chưa chuẩn hóa)
st.subheader("Nhập thông tin bệnh nhân (giá trị thực tế, chưa chuẩn hóa)")
col1, col2 = st.columns(2)
with col1:
    age = st.number_input(f"Tuổi (age, thực tế)", value=50.0)
    sex = st.selectbox("Giới tính (sex)", ["Nam", "Nữ"])
    bmi = st.number_input(f"BMI (body mass index, thực tế)", value=25.0)
    bp = st.number_input(f"Huyết áp trung bình (bp, thực tế)", value=80.0)
    s1 = st.number_input(f"S1: TC cholesterol (thực tế)", value=150.0)
with col2:
    s2 = st.number_input(f"S2: LDL cholesterol (thực tế)", value=100.0)
    s3 = st.number_input(f"S3: HDL cholesterol (thực tế)", value=50.0)
    s4 = st.number_input(f"S4: Tỷ lệ cholesterol (thực tế)", value=4.0)
    s5 = st.number_input(f"S5: Glucose trong máu (thực tế)", value=90.0)
    s6 = st.number_input(f"S6: Hồng cầu glycat hóa (thực tế)", value=5.0)

# Tham số K
k = st.slider("Số lượng láng giềng K", min_value=1, max_value=15, value=5)

# Tiền xử lý dữ liệu
scaler = StandardScaler() # khởi tạo một đối tượng chuẩn hóa dữ liệu từ thư viện sklearn.preprocessing. StandardScaler chuẩn hóa các đặc trưng (feature) trong dữ liệu bằng cách trừ trung bình và chia cho độ lệch chuẩn.
X_scaled = scaler.fit_transform(X)

# Xử lý input người dùng: chuẩn hóa theo mean/std của dữ liệu gốc
# tạo vector đầu vào
user_input = np.array([
    age,
    1.0 if sex == "Nam" else 0.0,
    bmi,
    bp,
    s1,
    s2,
    s3,
    s4,
    s5,
    s6
]).reshape(1, -1)
user_input_scaled = scaler.transform(user_input)  #chuẩn hóa, nếu đã chuẩn hóa mô hình. Biến đổi dữ liệu, không học lại tham số. Sử dụng tham số đã học từ X_train

# Dự đoán (theo mỗi _từng giá trị đầu vào do người dùng nhập)
if st.button("Dự đoán chỉ số tiến triển bệnh"):
    model = KNeighborsRegressor(n_neighbors=k)
    model.fit(X_scaled, y)
    prediction = model.predict(user_input_scaled)[0]
    st.success(f"Chỉ số tiến triển bệnh tiểu đường dự đoán: **{prediction:.2f}**")
    st.caption("(Chỉ số càng cao thể hiện mức độ nghiêm trọng càng lớn)")

st.markdown("""
---
*Lưu ý: Input là giá trị thực tế, hệ thống sẽ tự động chuẩn hóa trước khi dự đoán.*
""")